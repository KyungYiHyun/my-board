name: CI/CD

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # 2. Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # Gradle 권한부여
      - name: Grant execute permission for Gradlew
        working-directory: ./backend
        run: chmod +x ./gradlew

      # 3. Gradle Build
      - name: Build with Gradle
        working-directory: ./backend
        run: ./gradlew clean build -x test

      # 4. Docker Hub Login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5. Docker 이미지 빌드 및 Push (Spring)
      - name: Build and Push Spring image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_IMAGE }}
        
      # 6. Docker 이미지 빌드 및 Push (React)
      - name: Build and Push React image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.REACT_IMAGE }}
        
      # 7. SSH to EC2 + Pull & Compose
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_IMAGE }}
            docker pull ${{ secrets.REACT_IMAGE }}
            cd /home/ubuntu/docker-compose
            docker-compose up -d --no -deps app react-app